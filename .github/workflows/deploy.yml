# Simple workflow for deploying static content to GitHub Pages
name: Deploy PixiEditor.net to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  build:
    runs-on: ubuntu-latest    
    defaults:
      run:
        working-directory: ./website
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Install dependencies
        run: yarn install
      - name: Build site
        run: yarn build
      - name: Add run id
        run: |
          echo ${{ github.run_id }} > ./build/gh_action.txt
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: ./website/build
  
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build    
    defaults:
      run:
        working-directory: ./website
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Check for correct run ID
        run: |
          WEB_CONTENT=$(curl -s https://pixieditor.net/gh_action.txt)
          if [ "$WEB_CONTENT" = "${{ github.run_id }}" ]; then
            echo "gh action file matches the run ID."
          else
            echo "gh action file does not match the run ID."
            echo "gotten '$WEB_CONTENT' expected '${{ github.run_id }}'"
            exit 1
          fi
      - name: Audit using Lighthouse
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            https://pixieditor.net
          uploadArtifacts: true
